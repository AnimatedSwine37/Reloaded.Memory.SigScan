override Reloaded.Memory.Sigscan.Structs.PatternScanResult.Equals(object obj) -> bool
override Reloaded.Memory.Sigscan.Structs.PatternScanResult.GetHashCode() -> int
readonly Reloaded.Memory.Sigscan.Structs.CompiledScanPattern.Length -> int
readonly Reloaded.Memory.Sigscan.Structs.CompiledScanPattern.Pattern -> string
Reloaded.Memory.Sigscan.Instructions.GenericInstruction
Reloaded.Memory.Sigscan.Instructions.GenericInstruction.GenericInstruction() -> void
Reloaded.Memory.Sigscan.Instructions.GenericInstruction.GenericInstruction(nuint longValue, nuint mask) -> void
Reloaded.Memory.Sigscan.Instructions.GenericInstruction.LongValue -> nuint
Reloaded.Memory.Sigscan.Instructions.GenericInstruction.Mask -> nuint
Reloaded.Memory.Sigscan.Scanner
Reloaded.Memory.Sigscan.Scanner.Dispose() -> void
Reloaded.Memory.Sigscan.Scanner.FindPattern(string pattern) -> Reloaded.Memory.Sigscan.Structs.PatternScanResult
Reloaded.Memory.Sigscan.Scanner.FindPattern_Avx2(string pattern) -> Reloaded.Memory.Sigscan.Structs.PatternScanResult
Reloaded.Memory.Sigscan.Scanner.FindPattern_Compiled(Reloaded.Memory.Sigscan.Structs.CompiledScanPattern pattern, int startingIndex = 0) -> Reloaded.Memory.Sigscan.Structs.PatternScanResult
Reloaded.Memory.Sigscan.Scanner.FindPattern_Compiled(string pattern) -> Reloaded.Memory.Sigscan.Structs.PatternScanResult
Reloaded.Memory.Sigscan.Scanner.FindPattern_Simple(string pattern, int startingIndex = 0) -> Reloaded.Memory.Sigscan.Structs.PatternScanResult
Reloaded.Memory.Sigscan.Scanner.FindPattern_Sse2(string pattern) -> Reloaded.Memory.Sigscan.Structs.PatternScanResult
Reloaded.Memory.Sigscan.Scanner.Scanner(byte* data, int length) -> void
Reloaded.Memory.Sigscan.Scanner.Scanner(byte[] data) -> void
Reloaded.Memory.Sigscan.Scanner.Scanner(System.Diagnostics.Process process, System.Diagnostics.ProcessModule module) -> void
Reloaded.Memory.Sigscan.Scanner.~Scanner() -> void
Reloaded.Memory.Sigscan.Structs.CompiledScanPattern
Reloaded.Memory.Sigscan.Structs.CompiledScanPattern.CompiledScanPattern() -> void
Reloaded.Memory.Sigscan.Structs.CompiledScanPattern.CompiledScanPattern(string stringPattern) -> void
Reloaded.Memory.Sigscan.Structs.PatternScanResult
Reloaded.Memory.Sigscan.Structs.PatternScanResult.Equals(Reloaded.Memory.Sigscan.Structs.PatternScanResult other) -> bool
Reloaded.Memory.Sigscan.Structs.PatternScanResult.Found.get -> bool
Reloaded.Memory.Sigscan.Structs.PatternScanResult.Offset.get -> int
Reloaded.Memory.Sigscan.Structs.PatternScanResult.PatternScanResult() -> void
Reloaded.Memory.Sigscan.Structs.PatternScanResult.PatternScanResult(int offset) -> void
Reloaded.Memory.Sigscan.Structs.SimdPatternScanData
Reloaded.Memory.Sigscan.Structs.SimdPatternScanData.Bytes -> byte[]
Reloaded.Memory.Sigscan.Structs.SimdPatternScanData.LeadingIgnoreCount -> int
Reloaded.Memory.Sigscan.Structs.SimdPatternScanData.Mask -> byte[]
Reloaded.Memory.Sigscan.Structs.SimdPatternScanData.SimdPatternScanData() -> void
Reloaded.Memory.Sigscan.Structs.SimdPatternScanData.SimdPatternScanData(string stringPattern) -> void
Reloaded.Memory.Sigscan.Structs.SimplePatternScanData
Reloaded.Memory.Sigscan.Structs.SimplePatternScanData.Bytes -> byte[]
Reloaded.Memory.Sigscan.Structs.SimplePatternScanData.Mask -> byte[]
Reloaded.Memory.Sigscan.Structs.SimplePatternScanData.SimplePatternScanData() -> void
Reloaded.Memory.Sigscan.Structs.SimplePatternScanData.SimplePatternScanData(string stringPattern) -> void
Reloaded.Memory.Sigscan.Utility.SpanSplitEnumerator<TSpanType>
Reloaded.Memory.Sigscan.Utility.SpanSplitEnumerator<TSpanType>.Current.get -> System.ReadOnlySpan<TSpanType>
Reloaded.Memory.Sigscan.Utility.SpanSplitEnumerator<TSpanType>.MoveNext() -> bool
Reloaded.Memory.Sigscan.Utility.SpanSplitEnumerator<TSpanType>.SpanSplitEnumerator() -> void
Reloaded.Memory.Sigscan.Utility.SpanSplitEnumerator<TSpanType>.SpanSplitEnumerator(System.ReadOnlySpan<TSpanType> item, TSpanType splitItem) -> void
Reloaded.Memory.Sigscan.Utility.SpanSplitEnumerator<TSpanType>.SplitItem.get -> TSpanType
virtual Reloaded.Memory.Sigscan.Scanner.Dispose(bool disposing) -> void