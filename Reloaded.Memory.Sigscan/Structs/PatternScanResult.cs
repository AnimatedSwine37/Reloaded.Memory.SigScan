using System;
using System.Collections.Generic;
using System.Text;

namespace Reloaded.Memory.Sigscan.Structs
{
    public struct PatternScanResult
    {
        /// <summary>
        /// The offset of the pattern if found, else -1.
        /// </summary>
        public int Offset { get; }

        /// <summary>
        /// True if the pattern has been found, else false.
        /// </summary>
        public bool Found => Offset != -1;

        /// <summary>
        /// Creates a pattern scan result given the offset of the pattern.
        /// </summary>
        /// <param name="offset">The offset of the pattern if found. -1 if not found.</param>
        public PatternScanResult(int offset)
        {
            Offset = offset;
        }

        /* Autogenerated by R# */
        public bool Equals(PatternScanResult other)
        {
            return Offset == other.Offset;
        }

        public override bool Equals(object obj)
        {
            return obj is PatternScanResult other && Equals(other);
        }

        public override int GetHashCode()
        {
            return Offset;
        }

    }
}
